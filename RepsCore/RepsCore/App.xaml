<Application x:Class="RepsCore.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:RepsCore"
             xmlns:vms="clr-namespace:RepsCore.ViewModels"
             xmlns:common="clr-namespace:RepsCore.Common"
             StartupUri="Views\MainWindow.xaml"
             Startup="AppOnStartup">
    <Application.Resources>


        <ResourceDictionary>

            <!-- データコンテキスト -->
            <vms:MainViewModel x:Key="MainViewModel" />

            <!-- BooleanToVisibilityConverterの、 Collapsed 版　-->
            <common:BoolToVisibilityCollapsedConverter x:Key="BoolToVisibilityCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed" />

            <!-- EnumToBoolConverter ラジオボタンとEnumのバインディング用 -->
            <common:EnumToBoolConverter x:Key="EnumBooleanConverter"/>

            <ResourceDictionary.MergedDictionaries>

                <!-- デフォルトテーマ 差し替え用 -->
                <ResourceDictionary Source="pack://application:,,,/Themes/DefaultTheme.xaml" x:Name="DefaultTheme"/>

                <!-- 基本 -->
                <ResourceDictionary>

                    <Style x:Key="DefaultTextBlockStyle" TargetType="{x:Type TextBlock}">
                        <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontWeight" Value="Normal" />
                    </Style>

                    <Style x:Key="DefaultRunStyle" TargetType="{x:Type Run}">
                        <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontStyle" Value="Normal" />
                    </Style>

                    <Style x:Key="DefaultLabelStyle" TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource ControlMediumColorBrush}" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="Padding" Value="0" />
                    </Style>

                    <Style x:Key="SectionTitle" TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource TitleTextColorBrush}" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="Margin" Value="3 0 0 0" />
                    </Style>

                    <Style x:Key="ErrorInfoTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultTextBlockStyle}">
                        <Setter Property="Foreground" Value="{DynamicResource WarningColorBrush}" />
                    </Style>

                    <Style x:Key="HyperlinkFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource ControlLightColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type Hyperlink}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource HyperlinkFocusVisual}"/>
                        <Setter Property="TextBlock.TextDecorations" Value="" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                                <Setter Property="Foreground" Value="LightBlue" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="TextBlock.TextDecorations" Value="" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="DefaultRadioButtonStyle" TargetType="{x:Type RadioButton}">
                        <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="3 0 0 0" />
                        <Setter Property="FontStyle" Value="Normal" />
                    </Style>

                    <Style x:Key="DefaultTextBoxStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="Margin" Value="1"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Background" Value="{DynamicResource NormalTextBoxBackgroundColorBrush}" />
                        <Style.Triggers>
                            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                <Setter Property="Background" Value="WhiteSmoke" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="White" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource NormalTextBoxBackgroundColorBrush}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="DefaultPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
                        <Setter Property="Margin" Value="1"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Background" Value="{DynamicResource NormalTextBoxBackgroundColorBrush}" />
                    </Style>

                    <Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Border}">
                        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                <Setter Property="BorderThickness" Value="0" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderInactiveBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <!-- ボード・タイルのスタイル -->
                    <Style x:Key="BoardStyle" TargetType="Border">
                        <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect Color="{DynamicResource ShadowBoardColor}" Opacity="1" ShadowDepth="0.8" BlurRadius="3" Direction="315"/>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>
                
                <!-- SystemButton -->
                <ResourceDictionary>

                    <Style x:Key="PathSysButton" TargetType="Button">
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                        <Setter Property="Width" Value="46" />
                        <Setter Property="Height" Value="32" />
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="Border" TextBlock.Foreground="{DynamicResource ControlForegroundColorBrush}" CornerRadius="0" BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0">
                                                <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                                <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>

                                        <Viewbox Width="32" Height="32">
                                            <Path x:Name="PathIcon" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Stroke="Transparent" StrokeThickness="0" Margin="13" RenderTransformOrigin="0.5,0.5">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <TransformGroup.Children>
                                                            <RotateTransform Angle="0" />
                                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                                        </TransformGroup.Children>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                                <Path.Fill>
                                                    <SolidColorBrush x:Name="PathIconColor" Color="{DynamicResource ControlForegroundColor}"/>
                                                </Path.Fill>
                                            </Path>
                                        </Viewbox>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <!--
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlMouseOverBackgroundColorBrush}"></Setter>
                                            -->
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                        </Trigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="False" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}">
                                                <!--
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="0.0" />
                                                                <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </GradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                                -->
                                            </Setter>
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlPressedColorBrush}"/>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="true" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>

                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- PathButton -->
                <ResourceDictionary>

                    <!-- FocusVisual -->
                    <Style x:Key="ButtonFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="2" StrokeThickness="1" Stroke="{DynamicResource ControlMediumColorBrush}" StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="PathButton" TargetType="Button">
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="Border" TextBlock.Foreground="{DynamicResource ControlForegroundColorBrush}" CornerRadius="0" BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0">
                                                <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                                <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>

                                        <Path x:Name="PathIcon" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Stroke="Transparent" StrokeThickness="0" Margin="8" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <TransformGroup.Children>
                                                        <RotateTransform Angle="0" />
                                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                                    </TransformGroup.Children>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <SolidColorBrush x:Name="PathIconColor" Color="{DynamicResource ControlForegroundColor}"/>
                                            </Path.Fill>
                                        </Path>
                                    </Border>
                                    <ControlTemplate.Triggers>

                                        <Trigger Property="IsDefault" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush">
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="0.0" />
                                                                <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </GradientBrush.GradientStops>
                                                    </LinearGradientBrush>

                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource DisabledForegroundColorBrush}"/>
                                        </Trigger>

                                        <Trigger Property="IsMouseOver" Value="true">
                                            <!--
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlMouseOverBackgroundColorBrush}"></Setter>
                                            -->
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                        </Trigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="False" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}">
                                                <!--
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="0.0" />
                                                                <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </GradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                                -->
                                            </Setter>
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlPressedColorBrush}"/>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="true" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>

                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- ListView -->
                <ResourceDictionary>
                    <!--
                    https://msdn.microsoft.com/en-us/library/ms788747(v=vs.85).aspx
                    -->
                    <Style x:Key="GridViewColumnHeaderGripperStyle" TargetType="Thumb">
                        <Setter Property="OverridesDefaultStyle" Value="False"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0,0.5" Opacity="0.4">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0.0" Color="WhiteSmoke" />
                                            <GradientStop Offset="1.0" Color="Black" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Background="Transparent">
                                        <Rectangle HorizontalAlignment="Center" Width="2" Fill="{TemplateBinding Background}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="Black" />
                                    <GradientStop Offset="1" Color="White" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="GridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
                        <Setter Property="OverridesDefaultStyle" Value="False"/>
                        <Setter Property="Height" Value="32" />
                        <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}"/>
                        <Setter Property="TextElement.FontWeight" Value="Normal" />
                        <Setter Property="TextElement.Foreground" Value="{DynamicResource ControlLightColorBrush}" />
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewColumnHeader">
                                    <Grid>
                                        <Border Name="HeaderBorder" Padding="0" Background="Transparent" BorderBrush="Gray" BorderThickness="0,0,0,0.5">
                                            <ContentPresenter Name="HeaderContent" Margin="0,0,0,0" RecognizesAccessKey="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                        <!-- Simple disable colum header resize by removing this. -->
                                        <!--
                                        <Thumb x:Name="PART_HeaderGripper" 
                                                Style="{StaticResource GridViewColumnHeaderGripperStyle}" 
                                               HorizontalAlignment="Right" 
                                               Margin="0,0,-9,0" />
                                        -->
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="HeaderBorder" Property="Opacity" Value=".5" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Role" Value="Floating">
                                <Setter Property="Opacity" Value="0.7" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="GridViewColumnHeader">
                                            <Canvas Name="PART_FloatingHeaderCanvas">
                                                <Rectangle Fill="#60000000" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"/>
                                            </Canvas>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="Role" Value="Padding">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="GridViewColumnHeader">
                                            <Border Name="HeaderBorder" BorderThickness="0,1,0,1" BorderBrush="Transparent" Background="Transparent"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Padding" Value="0,0,0,0" />
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Setter Property="Background" Value="Gainsboro" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Rectangle x:Name="Rect" Width="13">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="Gainsboro" Offset="1" />
                                                <GradientStop Color="#ccc" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Rect" >
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#CCC" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Rect" >
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#eee" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Rectangle>
                                    <!-- <Border CornerRadius="0" 
                                            Background="{TemplateBinding Background}" 
                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                            Height="8" />
                                    -->
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="RepeatButtonStyleInc" TargetType="{x:Type RepeatButton}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border x:Name="Border" Margin="0" CornerRadius="0" BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" Opacity="0.1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="Transparent"/>
                                                        <GradientStop Color="Transparent" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <!--
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gainsboro" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        -->
                                        <Path x:Name="Arrow"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="{Binding Content, 
                                            RelativeSource={RelativeSource TemplatedParent}}" >
                                            <Path.Fill>
                                                <SolidColorBrush Color="Gainsboro"/>
                                            </Path.Fill>
                                        </Path>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="RepeatButtonStyleDec" TargetType="{x:Type RepeatButton}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border x:Name="Border" Margin="0" CornerRadius="0" BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="Transparent"/>
                                                        <GradientStop Color="Transparent" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <!--
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gainsboro" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        -->
                                        <Path x:Name="Arrow"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="{Binding Content, 
                                            RelativeSource={RelativeSource TemplatedParent}}" >
                                            <Path.Fill>
                                                <SolidColorBrush Color="Gainsboro"/>
                                            </Path.Fill>
                                        </Path>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="18" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="18" />
                            </Grid.RowDefinitions>
                            <Border Grid.RowSpan="3" CornerRadius="0" Background="Transparent" />

                            <RepeatButton Grid.Row="0" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" Style="{StaticResource RepeatButtonStyleInc}"/>
                            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource RepeatButtonStyleDec}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ThumbStyle}"></Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource RepeatButtonStyleInc}"/>
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton Grid.Row="3" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" Style="{StaticResource RepeatButtonStyleDec}"/>
                        </Grid>
                    </ControlTemplate>

                    <Style x:Key="ListviewFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="2" StrokeThickness="1" Stroke="#CCCCCC" StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
                        <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource ListviewFocusVisual}"/>
                        <!--
                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                        -->
                        <Setter Property="Foreground" Value="{DynamicResource ListviewItemForegroundColorBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border Name="Border" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            ClipToBounds="{TemplateBinding ClipToBounds}"
                                            CornerRadius="0"
                                            SnapsToDevicePixels="true">
                                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="{DynamicResource ListviewAlt0ColorBrush}" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0" />
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="{DynamicResource ListviewAlt1ColorBrush}" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource ListviewItemSelectedForegroundColorBrush}" />
                                <Setter Property="BorderBrush" Value="WhiteSmoke" />
                                <Setter Property="BorderThickness" Value="0" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource AccentCoolDarkColorBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource ListviewItemSelectedForegroundColorBrush}" />
                                <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                <Setter Property="BorderBrush" Value="WhiteSmoke" />
                                <!-- Or Gray -->
                                <Setter Property="BorderThickness" Value="0" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                </ResourceDictionary>
                
                <!-- RadioButton -->
                <ResourceDictionary>

                    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="Transparent"/>
                    <SolidColorBrush x:Key="RadioButton.Static.UncheckedBorder" Color="Gainsboro"/>

                    <Style x:Key="RadioButtonFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="4 2 2 2" SnapsToDevicePixels="true" Stroke="{DynamicResource ControlMediumColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="RadioButtonOptionMarkFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource ControlMediumColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#CCC"/>
                    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
                    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
                    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
                    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
                    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
                    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
                    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
                    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
                    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>

                    <Style x:Key="SelectionRadioButtonStyle" TargetType="{x:Type RadioButton}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.UncheckedBorder}"/>
                        <Setter Property="Foreground" Value="{StaticResource ControlForegroundColorBrush}"/>
                        <Setter Property="BorderThickness" Value="0.2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                    <Grid x:Name="templateRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0 0 0 0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <!--
                                        <Border x:Name="radioButtonBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalAlignment="Center">
                                            <Grid x:Name="markGrid" Margin="3">
                                                <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="4" MinHeight="4" Opacity="0"/>
                                            </Grid>
                                        </Border>
                                        -->

                                        <Grid x:Name="radioButtonUncheckedState" Grid.Column="1" Margin="1">
                                            <Border BorderBrush="#49FFFFFF" BorderThickness="0.1,0.1,0,0" CornerRadius="1"/>
                                            <Border BorderBrush="#49000000" BorderThickness="0,0,1,1" CornerRadius="1"/>
                                        </Grid>

                                        <Grid x:Name="radioButtonCheckedState" Grid.Column="1" Margin="1" Visibility="Collapsed">
                                            <Border BorderBrush="#41FFFFFF" BorderThickness="1,1,0,0" CornerRadius="1"/>
                                            <Border BorderBrush="#49000000" BorderThickness="0,0,1,1" CornerRadius="1"/>
                                        </Grid>

                                        <Border x:Name="radioButtonContentBorder" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}" CornerRadius="1">
                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
                                        </Border>

                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasContent" Value="true">
                                            <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}"/>

                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <!--
                                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                                            -->

                                            <Setter Property="Foreground" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                            <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                            <!--
                                            <Setter TargetName="radioButtonUncheckedState" Property="Background" Value="{StaticResource ControlForegroundColorBrush}"/>
                                            -->
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <!--
                                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                                            -->
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <!--
                                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                                            -->
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <!--
                                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                                            -->

                                            <Setter Property="Background" TargetName="radioButtonContentBorder" Value="{DynamicResource RadioButtonCheckedBackgroundColorBrush}"/>

                                            <Setter Property="BorderBrush" Value="#212121"/>
                                            <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                                            <Setter Property="TextElement.FontWeight" Value="Bold"/>
<!--
                                            <Setter TargetName="radioButtonCheckedState" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="radioButtonUncheckedState" Property="Visibility" Value="Collapsed" />
-->
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="false">
                                            <Setter Property="Background" TargetName="radioButtonContentBorder" Value="{DynamicResource RadioButtonUnCheckedBackgroundColorBrush}"/>
<!--
                                            <Setter TargetName="radioButtonCheckedState" Property="Visibility" Value="Collapsed" />
                                            <Setter TargetName="radioButtonUncheckedState" Property="Visibility" Value="Visible" />
                                            -->
                                            <Setter Property="TextElement.FontWeight" Value="Normal"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="{x:Null}">
                                            <!--
                                            <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                                            -->
                                            <Setter Property="Background" TargetName="radioButtonContentBorder" Value="{StaticResource RadioButton.Static.Background}"/>

                                            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.UncheckedBorder}"/>
                                            <Setter Property="Foreground" Value="#CCC"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- NoChrome TabControl -->
                <ResourceDictionary>

                    <Style x:Key="NoChromeTabFocusVisualStyle">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="1" StrokeThickness="1" StrokeDashArray="1 2" Stroke="{DynamicResource ControlMediumColorBrush}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="NoChromeTabControl" TargetType="{x:Type TabControl}">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Focusable" Value="True"/>
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabControl}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <TabPanel Grid.Row="0" x:Name="HeaderPanel" HorizontalAlignment="Center" IsItemsHost="True" Margin="0 0 0 0"/>
                                        <Border Grid.Row="1" x:Name="Border" BorderThickness="0 0.5 0 0" BorderBrush="DimGray" Margin="0">
                                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="0" ContentSource="SelectedContent" RecognizesAccessKey="True"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="NoChromeTabHeader" TargetType="{x:Type TabItem}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource NoChromeTabFocusVisualStyle}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Grid Name="Panel">
                                        <Border Name="Border" BorderThickness="0 0 0 2" BorderBrush="Transparent" Margin="0 0 0 0" Background="{DynamicResource BoardBackgroundColorBrush}">
                                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"  HorizontalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" Margin="4"/>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>
                                            <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                                            <Setter Property="TextBlock.FontWeight" Value="Bold" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                                            <Setter Property="TextBlock.FontWeight" Value="Bold" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Application.Resources>
</Application>
